apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-api-server"
  labels:
    app: api-server
    microservice: "{{ .Release.Name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-server
      microservice: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: api-server
        microservice: "{{ .Release.Name }}"
    spec:
      containers:
        - name: "{{ .Release.Name }}"
          image: "bte1lar/{{ .Release.Name }}:{{ required 'Missing value for .Values.image.tag' .Values.image.tag }}"
          imagePullPolicy: Always
          resources:
            limits:
              cpu: "200m"
              memory: "200Mi"
          env:
            - name: PORT
              valueFrom:
              configMapKeyRef:
                name: "{{ .Release.Name }}-api-server"
                key: PORT
            - name: POSTGRES_HOST
              valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-api-server"
                key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-api-server"
                key: POSTGRES_PORT
            - name: POSTGRES_USERNAME
              valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-api-server"
                key: POSTGRES_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-api-server"
                key: POSTGRES_PASSWORD
            - name: POSTGRES_DATABASE
              valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-api-server"
                key: POSTGRES_DATABASE
